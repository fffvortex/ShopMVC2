@model ProductDisplayModel
@using WebApplication1.Areas.Identity.Data

@{
    ViewData["Title"] = "";
}

<partial name="_SearchPartial" />
<div class="mt-4 w-100 d-flex flex-wrap justify-content-center">
    @foreach (var product in Model.Products)
    {
        <div class="card mx-2 mb-4" style="width: 19rem;">
            @if (string.IsNullOrWhiteSpace(@product.ProductImage))
            {
                <a href="@Url.Action("IndexSingle","Home", new {id = product.Id})">
                    <img style="height: 19rem;" src="/img/No_Picture.jpg" class="card-img-top" alt="@product.ProductTitle">
                    <span class="badge text-bg-warning badge-quantity">
                        @product.Quantity
                    </span>
                </a>
            }
            else
            {
                <a href="@Url.Action("IndexSingle","Home", new {id = product.Id})">
                    <img style="height: 19rem;" src="/img/@product.ProductImage" class="card-img-top" alt="@product.ProductTitle">
                    <span class="badge text-bg-warning badge-quantity">
                        @product.Quantity
                    </span>
                </a>
            }
            <div class="card-body">
                <h5 class="card-title">@product.ProductTitle</h5>
                <p class="card-text">@product.ProductTypeTitle </p>
                <p class="card-text">@product.Price £</p>
                @if (product.Quantity > 0)
                {
                    <button id="add-to-card-@product.Id" onclick="add(@product.Id)" type="button" class="btn btn-success align-content-center add-to-card">Add to cart</button>

                    <script defer type="text/javascript">
                            async function SetAllBtnCards(productId) {
                            const index = document.getElementById(`add-to-card-${productId}`)

                            var quantityInCartRes = await fetch(`/Cart/GetProductQuantityInCartByProductId?productId=${productId}`)
                            var quantityRes = await fetch(`/Stock/GetQuantityInStockByProductId?productId=${productId}`)
                            quantityInStock = await quantityRes.json()
                            quantityInCart = await quantityInCartRes.json()
                            if (quantityInCart === 0) {
                                return;
                            }
                            else{

                                index.classList.remove('btn-success')
                                index.classList.add('btn-outline-success')
                                index.innerHTML = `${quantityInCart} in cart`
                            }
                        }
                        SetAllBtnCards(@product.Id)
                    </script>
                }
                else
                {
                    <button disabled class="btn btn-outline-danger">Out of stock</button>
                }
            </div>
        </div>
    }
</div>
