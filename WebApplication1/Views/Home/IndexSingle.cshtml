@model Product

<div class="row">
    <div class="col-7">
        @if (string.IsNullOrEmpty(Model.ProductImage))
        {
            <img class="full-card-img" src="/img/No_Picture.jpg" alt="@Model.ProductTitle" />
        }
        else
        {
            <img class="full-card-img" src="/img/@Model.ProductImage" alt="@Model.ProductTitle" />
        }
    </div>
    <div class="col-5">
        <div class="row">
            <div style="justify-content:center; align-items: center; text-align: center;">
                <h2>@Model.ProductTitle</h2>
            </div>
            <div style="border-top: solid 1px gray;"></div>
            <br />
            <h4 style="text-align:center;">@Model.ProductTypeTitle</h4>
            <div style="border-top: solid 1px gray; width:80%; margin-inline:auto;"></div>
            <br />
            @if(Model.Quantity > 0)
            {
                <span class="badge text-bg-warning">@Model.Quantity in stock</span>
            }
            else
            {
                <span class="badge text-bg-danger">@Model.Quantity in stock</span>
            }
            <div class="collapse large-collapse" id="collapseExample">
                <div class="card card-body">
                    <p>@Model.Description</p>
                </div>
            </div>
        </div>
        <div class="row">
            <div style="text-align: center;">
                <div class="price-icon">
                    <h3 style="text-align:center;">@Model.Price £</h3>
                </div>
                @if(Model.Quantity > 0)
                {
                    <button id="add-to-card-@Model.Id" onclick="add(@Model.Id)" type="button" class=" add-to-card btn btn-success align-content-center">Add to cart</button>
                    <script type="text/javascript">
                        async function SetAllBtnCards(productId) {
                            const index = document.getElementById(`add-to-card-${productId}`)

                            var quantityInCartRes = await fetch(`/Cart/GetProductQuantityInCartByProductId?productId=${productId}`)
                            var quantityRes = await fetch(`/Stock/GetQuantityInStockByProductId?productId=${productId}`)
                            quantityInStock = await quantityRes.json()
                            quantityInCart = await quantityInCartRes.json()


                            if (quantityInCart === 0) {
                                return;
                            }
                            else{

                                index.classList.remove('btn-success')
                                index.classList.add('btn-outline-success')
                                index.innerHTML = `${quantityInCart} in cart`
                            }
                        }
                        SetAllBtnCards(@Model.Id)
                    </script>
                }
                else
                {
                    <button disabled class="btn btn-outline-danger">Out of stock</button>
                }
                <button class="btn btn-success" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                    About @Model.ProductTitle
                </button>
            </div>
        </div>
    </div>
</div>
<br />
<div>
    
</div>
<div class="collapse small-collapse" id="collapseExample">
    <div class="card card-body">
        <p>@Model.Description</p>
    </div>
</div>
